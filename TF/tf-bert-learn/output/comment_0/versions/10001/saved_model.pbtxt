saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "All"
        input_arg {
          name: "input"
          type: DT_BOOL
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type: DT_BOOL
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ArgMax"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dimension"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "output_type"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "output_type"
          type: "type"
          default_value {
            type: DT_INT64
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Assert"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "data"
          type_list_attr: "T"
        }
        attr {
          name: "T"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "summarize"
          type: "int"
          default_value {
            i: 3
          }
        }
        is_stateful: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BatchMatMul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        attr {
          name: "adj_x"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "adj_y"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "BiasAdd"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "bias"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "GatherV2"
        input_arg {
          name: "params"
          type_attr: "Tparams"
        }
        input_arg {
          name: "indices"
          type_attr: "Tindices"
        }
        input_arg {
          name: "axis"
          type_attr: "Taxis"
        }
        output_arg {
          name: "output"
          type_attr: "Tparams"
        }
        attr {
          name: "Tparams"
          type: "type"
        }
        attr {
          name: "Tindices"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "Taxis"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Less"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "LogSoftmax"
        input_arg {
          name: "logits"
          type_attr: "T"
        }
        output_arg {
          name: "logsoftmax"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "NoOp"
      }
      op {
        name: "OneHot"
        input_arg {
          name: "indices"
          type_attr: "TI"
        }
        input_arg {
          name: "depth"
          type: DT_INT32
        }
        input_arg {
          name: "on_value"
          type_attr: "T"
        }
        input_arg {
          name: "off_value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: -1
          }
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "TI"
          type: "type"
          default_value {
            type: DT_INT64
          }
          allowed_values {
            list {
              type: DT_UINT8
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "Pow"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_HALF
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "Rsqrt"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Softmax"
        input_arg {
          name: "logits"
          type_attr: "T"
        }
        output_arg {
          name: "softmax"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "SquaredDifference"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Squeeze"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "squeeze_dims"
          type: "list(int)"
          default_value {
            list {
            }
          }
          has_minimum: true
        }
      }
      op {
        name: "StopGradient"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Tanh"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Transpose"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "perm"
          type_attr: "Tperm"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tperm"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "TruncatedNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.11.0"
    tensorflow_git_version: "v1.11.0-rc2-4-gc19e29306c"
  }
  graph_def {
    node {
      name: "input_ids"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 128
            }
          }
        }
      }
    }
    node {
      name: "input_mask"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 128
            }
          }
        }
      }
    }
    node {
      name: "Shape"
      op: "Shape"
      input: "input_ids"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice"
      op: "StridedSlice"
      input: "Shape"
      input: "strided_slice/stack"
      input: "strided_slice/stack_1"
      input: "strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "zeros/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "zeros/mul"
      op: "Mul"
      input: "strided_slice"
      input: "zeros/mul/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "zeros/Less/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1000
          }
        }
      }
    }
    node {
      name: "zeros/Less"
      op: "Less"
      input: "zeros/mul"
      input: "zeros/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "zeros/packed/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "zeros/packed"
      op: "Pack"
      input: "strided_slice"
      input: "zeros/packed/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "zeros"
      op: "Fill"
      input: "zeros/packed"
      input: "zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/embeddings/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "bert/embeddings/ExpandDims"
      op: "ExpandDims"
      input: "input_ids"
      input: "bert/embeddings/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: ":w\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30522
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30522
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/word_embeddings/Initializer/truncated_normal"
      op: "Add"
      input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mul"
      input: "bert/embeddings/word_embeddings/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30522
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/word_embeddings"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30522
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 30522
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/embeddings/word_embeddings/Assign"
      op: "Assign"
      input: "bert/embeddings/word_embeddings"
      input: "bert/embeddings/word_embeddings/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30522
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/embeddings/word_embeddings/read"
      op: "Identity"
      input: "bert/embeddings/word_embeddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30522
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape"
      op: "Reshape"
      input: "bert/embeddings/ExpandDims"
      input: "bert/embeddings/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/GatherV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/embeddings/GatherV2"
      op: "GatherV2"
      input: "bert/embeddings/word_embeddings/read"
      input: "bert/embeddings/Reshape"
      input: "bert/embeddings/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Shape"
      op: "Shape"
      input: "bert/embeddings/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/embeddings/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/embeddings/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/embeddings/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/embeddings/strided_slice"
      op: "StridedSlice"
      input: "bert/embeddings/Shape"
      input: "bert/embeddings/strided_slice/stack"
      input: "bert/embeddings/strided_slice/stack_1"
      input: "bert/embeddings/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_1/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_1/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_1/shape"
      op: "Pack"
      input: "bert/embeddings/strided_slice"
      input: "bert/embeddings/Reshape_1/shape/1"
      input: "bert/embeddings/Reshape_1/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_1"
      op: "Reshape"
      input: "bert/embeddings/GatherV2"
      input: "bert/embeddings/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Shape_1"
      op: "Shape"
      input: "bert/embeddings/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/embeddings/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/embeddings/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/embeddings/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/embeddings/strided_slice_1"
      op: "StridedSlice"
      input: "bert/embeddings/Shape_1"
      input: "bert/embeddings/strided_slice_1/stack"
      input: "bert/embeddings/strided_slice_1/stack_1"
      input: "bert/embeddings/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal"
      op: "Add"
      input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mul"
      input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/token_type_embeddings"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 2
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/embeddings/token_type_embeddings/Assign"
      op: "Assign"
      input: "bert/embeddings/token_type_embeddings"
      input: "bert/embeddings/token_type_embeddings/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/embeddings/token_type_embeddings/read"
      op: "Identity"
      input: "bert/embeddings/token_type_embeddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_2"
      op: "Reshape"
      input: "zeros"
      input: "bert/embeddings/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/one_hot/on_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/embeddings/one_hot/off_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/embeddings/one_hot/depth"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bert/embeddings/one_hot"
      op: "OneHot"
      input: "bert/embeddings/Reshape_2"
      input: "bert/embeddings/one_hot/depth"
      input: "bert/embeddings/one_hot/on_value"
      input: "bert/embeddings/one_hot/off_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "TI"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: -1
        }
      }
    }
    node {
      name: "bert/embeddings/MatMul"
      op: "MatMul"
      input: "bert/embeddings/one_hot"
      input: "bert/embeddings/token_type_embeddings/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_3/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_3/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_3/shape"
      op: "Pack"
      input: "bert/embeddings/strided_slice_1"
      input: "bert/embeddings/Reshape_3/shape/1"
      input: "bert/embeddings/Reshape_3/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_3"
      op: "Reshape"
      input: "bert/embeddings/MatMul"
      input: "bert/embeddings/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/add"
      op: "Add"
      input: "bert/embeddings/Reshape_1"
      input: "bert/embeddings/Reshape_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 512
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/LessEqual"
      op: "LessEqual"
      input: "bert/embeddings/assert_less_equal/x"
      input: "bert/embeddings/assert_less_equal/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/All"
      op: "All"
      input: "bert/embeddings/assert_less_equal/LessEqual"
      input: "bert/embeddings/assert_less_equal/Const"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/Assert/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Condition x <= y did not hold element-wise:x (bert/embeddings/assert_less_equal/x:0) = "
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/Assert/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "y (bert/embeddings/assert_less_equal/y:0) = "
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/Assert/Assert/data_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Condition x <= y did not hold element-wise:x (bert/embeddings/assert_less_equal/x:0) = "
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/Assert/Assert/data_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "y (bert/embeddings/assert_less_equal/y:0) = "
          }
        }
      }
    }
    node {
      name: "bert/embeddings/assert_less_equal/Assert/Assert"
      op: "Assert"
      input: "bert/embeddings/assert_less_equal/All"
      input: "bert/embeddings/assert_less_equal/Assert/Assert/data_0"
      input: "bert/embeddings/assert_less_equal/Assert/Assert/data_1"
      input: "bert/embeddings/assert_less_equal/x"
      input: "bert/embeddings/assert_less_equal/Assert/Assert/data_3"
      input: "bert/embeddings/assert_less_equal/y"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
            type: DT_INT32
            type: DT_STRING
            type: DT_INT32
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/position_embeddings/Initializer/truncated_normal"
      op: "Add"
      input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mul"
      input: "bert/embeddings/position_embeddings/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/position_embeddings"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/embeddings/position_embeddings/Assign"
      op: "Assign"
      input: "bert/embeddings/position_embeddings"
      input: "bert/embeddings/position_embeddings/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/embeddings/position_embeddings/read"
      op: "Identity"
      input: "bert/embeddings/position_embeddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Slice/begin"
      op: "Const"
      input: "^bert/embeddings/assert_less_equal/Assert/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Slice/size"
      op: "Const"
      input: "^bert/embeddings/assert_less_equal/Assert/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Slice"
      op: "Slice"
      input: "bert/embeddings/position_embeddings/read"
      input: "bert/embeddings/Slice/begin"
      input: "bert/embeddings/Slice/size"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_4/shape"
      op: "Const"
      input: "^bert/embeddings/assert_less_equal/Assert/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/embeddings/Reshape_4"
      op: "Reshape"
      input: "bert/embeddings/Slice"
      input: "bert/embeddings/Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/add_1"
      op: "Add"
      input: "bert/embeddings/add"
      input: "bert/embeddings/Reshape_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/beta/Assign"
      op: "Assign"
      input: "bert/embeddings/LayerNorm/beta"
      input: "bert/embeddings/LayerNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/beta/read"
      op: "Identity"
      input: "bert/embeddings/LayerNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/gamma/Assign"
      op: "Assign"
      input: "bert/embeddings/LayerNorm/gamma"
      input: "bert/embeddings/LayerNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/gamma/read"
      op: "Identity"
      input: "bert/embeddings/LayerNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/moments/mean"
      op: "Mean"
      input: "bert/embeddings/add_1"
      input: "bert/embeddings/LayerNorm/moments/mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/moments/StopGradient"
      op: "StopGradient"
      input: "bert/embeddings/LayerNorm/moments/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "bert/embeddings/add_1"
      input: "bert/embeddings/LayerNorm/moments/StopGradient"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/moments/variance"
      op: "Mean"
      input: "bert/embeddings/LayerNorm/moments/SquaredDifference"
      input: "bert/embeddings/LayerNorm/moments/variance/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/batchnorm/add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999960041972e-13
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/batchnorm/add"
      op: "Add"
      input: "bert/embeddings/LayerNorm/moments/variance"
      input: "bert/embeddings/LayerNorm/batchnorm/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "bert/embeddings/LayerNorm/batchnorm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/batchnorm/mul"
      op: "Mul"
      input: "bert/embeddings/LayerNorm/batchnorm/Rsqrt"
      input: "bert/embeddings/LayerNorm/gamma/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/batchnorm/mul_1"
      op: "Mul"
      input: "bert/embeddings/add_1"
      input: "bert/embeddings/LayerNorm/batchnorm/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/batchnorm/mul_2"
      op: "Mul"
      input: "bert/embeddings/LayerNorm/moments/mean"
      input: "bert/embeddings/LayerNorm/batchnorm/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/batchnorm/sub"
      op: "Sub"
      input: "bert/embeddings/LayerNorm/beta/read"
      input: "bert/embeddings/LayerNorm/batchnorm/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/embeddings/LayerNorm/batchnorm/add_1"
      op: "Add"
      input: "bert/embeddings/LayerNorm/batchnorm/mul_1"
      input: "bert/embeddings/LayerNorm/batchnorm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/Shape"
      op: "Shape"
      input: "input_ids"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice"
      op: "StridedSlice"
      input: "bert/encoder/Shape"
      input: "bert/encoder/strided_slice/stack"
      input: "bert/encoder/strided_slice/stack_1"
      input: "bert/encoder/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/encoder/Shape_1"
      op: "Shape"
      input: "input_mask"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_1"
      op: "StridedSlice"
      input: "bert/encoder/Shape_1"
      input: "bert/encoder/strided_slice_1/stack"
      input: "bert/encoder/strided_slice_1/stack_1"
      input: "bert/encoder/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/encoder/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/Reshape/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/Reshape/shape"
      op: "Pack"
      input: "bert/encoder/strided_slice"
      input: "bert/encoder/Reshape/shape/1"
      input: "bert/encoder/Reshape/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/Reshape"
      op: "Reshape"
      input: "input_mask"
      input: "bert/encoder/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/Cast"
      op: "Cast"
      input: "bert/encoder/Reshape"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/ones/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/ones/mul"
      op: "Mul"
      input: "bert/encoder/strided_slice"
      input: "bert/encoder/ones/mul/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/ones/mul_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/ones/mul_1"
      op: "Mul"
      input: "bert/encoder/ones/mul"
      input: "bert/encoder/ones/mul_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/ones/Less/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1000
          }
        }
      }
    }
    node {
      name: "bert/encoder/ones/Less"
      op: "Less"
      input: "bert/encoder/ones/mul_1"
      input: "bert/encoder/ones/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/ones/packed/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/ones/packed/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/ones/packed"
      op: "Pack"
      input: "bert/encoder/strided_slice"
      input: "bert/encoder/ones/packed/1"
      input: "bert/encoder/ones/packed/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/ones/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/ones"
      op: "Fill"
      input: "bert/encoder/ones/packed"
      input: "bert/encoder/ones/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/encoder/mul"
      op: "Mul"
      input: "bert/encoder/ones"
      input: "bert/encoder/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/Shape_2"
      op: "Shape"
      input: "bert/embeddings/LayerNorm/batchnorm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_2"
      op: "StridedSlice"
      input: "bert/encoder/Shape_2"
      input: "bert/encoder/strided_slice_2/stack"
      input: "bert/encoder/strided_slice_2/stack_1"
      input: "bert/encoder/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/encoder/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/Reshape_1"
      op: "Reshape"
      input: "bert/embeddings/LayerNorm/batchnorm/add_1"
      input: "bert/encoder/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Shape"
      op: "Shape"
      input: "bert/encoder/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/strided_slice"
      op: "StridedSlice"
      input: "bert/encoder/layer_0/attention/self/Shape"
      input: "bert/encoder/layer_0/attention/self/strided_slice/stack"
      input: "bert/encoder/layer_0/attention/self/strided_slice/stack_1"
      input: "bert/encoder/layer_0/attention/self/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Shape_1"
      op: "Shape"
      input: "bert/encoder/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/strided_slice_1"
      op: "StridedSlice"
      input: "bert/encoder/layer_0/attention/self/Shape_1"
      input: "bert/encoder/layer_0/attention/self/strided_slice_1/stack"
      input: "bert/encoder/layer_0/attention/self/strided_slice_1/stack_1"
      input: "bert/encoder/layer_0/attention/self/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/query/kernel"
      input: "bert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_0/attention/self/query/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/query/bias"
      input: "bert/encoder/layer_0/attention/self/query/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_0/attention/self/query/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/MatMul"
      op: "MatMul"
      input: "bert/encoder/Reshape_1"
      input: "bert/encoder/layer_0/attention/self/query/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/query/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_0/attention/self/query/MatMul"
      input: "bert/encoder/layer_0/attention/self/query/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/key/kernel"
      input: "bert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_0/attention/self/key/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/key/bias"
      input: "bert/encoder/layer_0/attention/self/key/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_0/attention/self/key/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/MatMul"
      op: "MatMul"
      input: "bert/encoder/Reshape_1"
      input: "bert/encoder/layer_0/attention/self/key/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/key/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_0/attention/self/key/MatMul"
      input: "bert/encoder/layer_0/attention/self/key/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/value/kernel"
      input: "bert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_0/attention/self/value/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/value/bias"
      input: "bert/encoder/layer_0/attention/self/value/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_0/attention/self/value/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/MatMul"
      op: "MatMul"
      input: "bert/encoder/Reshape_1"
      input: "bert/encoder/layer_0/attention/self/value/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/value/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_0/attention/self/value/MatMul"
      input: "bert/encoder/layer_0/attention/self/value/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape/shape/3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape/shape"
      op: "Pack"
      input: "bert/encoder/strided_slice_2"
      input: "bert/encoder/layer_0/attention/self/Reshape/shape/1"
      input: "bert/encoder/layer_0/attention/self/Reshape/shape/2"
      input: "bert/encoder/layer_0/attention/self/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape"
      op: "Reshape"
      input: "bert/encoder/layer_0/attention/self/query/BiasAdd"
      input: "bert/encoder/layer_0/attention/self/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 2
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/transpose/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/transpose"
      op: "Transpose"
      input: "bert/encoder/layer_0/attention/self/Reshape"
      input: "bert/encoder/layer_0/attention/self/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_1/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_1/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_1/shape/3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_1/shape"
      op: "Pack"
      input: "bert/encoder/strided_slice_2"
      input: "bert/encoder/layer_0/attention/self/Reshape_1/shape/1"
      input: "bert/encoder/layer_0/attention/self/Reshape_1/shape/2"
      input: "bert/encoder/layer_0/attention/self/Reshape_1/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_1"
      op: "Reshape"
      input: "bert/encoder/layer_0/attention/self/key/BiasAdd"
      input: "bert/encoder/layer_0/attention/self/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 2
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/transpose_1/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/transpose_1"
      op: "Transpose"
      input: "bert/encoder/layer_0/attention/self/Reshape_1"
      input: "bert/encoder/layer_0/attention/self/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/MatMul"
      op: "BatchMatMul"
      input: "bert/encoder/layer_0/attention/self/transpose"
      input: "bert/encoder/layer_0/attention/self/transpose_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "adj_x"
        value {
          b: false
        }
      }
      attr {
        key: "adj_y"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.125
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Mul"
      op: "Mul"
      input: "bert/encoder/layer_0/attention/self/MatMul"
      input: "bert/encoder/layer_0/attention/self/Mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/ExpandDims"
      op: "ExpandDims"
      input: "bert/encoder/mul"
      input: "bert/encoder/layer_0/attention/self/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/sub/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/sub"
      op: "Sub"
      input: "bert/encoder/layer_0/attention/self/sub/x"
      input: "bert/encoder/layer_0/attention/self/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/mul_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -10000.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/mul_1"
      op: "Mul"
      input: "bert/encoder/layer_0/attention/self/sub"
      input: "bert/encoder/layer_0/attention/self/mul_1/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/add"
      op: "Add"
      input: "bert/encoder/layer_0/attention/self/Mul"
      input: "bert/encoder/layer_0/attention/self/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Softmax"
      op: "Softmax"
      input: "bert/encoder/layer_0/attention/self/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_2/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_2/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_2/shape/3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_2/shape"
      op: "Pack"
      input: "bert/encoder/strided_slice_2"
      input: "bert/encoder/layer_0/attention/self/Reshape_2/shape/1"
      input: "bert/encoder/layer_0/attention/self/Reshape_2/shape/2"
      input: "bert/encoder/layer_0/attention/self/Reshape_2/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_2"
      op: "Reshape"
      input: "bert/encoder/layer_0/attention/self/value/BiasAdd"
      input: "bert/encoder/layer_0/attention/self/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 2
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/transpose_2/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/transpose_2"
      op: "Transpose"
      input: "bert/encoder/layer_0/attention/self/Reshape_2"
      input: "bert/encoder/layer_0/attention/self/transpose_2/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/MatMul_1"
      op: "BatchMatMul"
      input: "bert/encoder/layer_0/attention/self/Softmax"
      input: "bert/encoder/layer_0/attention/self/transpose_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "adj_x"
        value {
          b: false
        }
      }
      attr {
        key: "adj_y"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/transpose_3/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/transpose_3"
      op: "Transpose"
      input: "bert/encoder/layer_0/attention/self/MatMul_1"
      input: "bert/encoder/layer_0/attention/self/transpose_3/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 2
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/mul_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/mul_2"
      op: "Mul"
      input: "bert/encoder/strided_slice_2"
      input: "bert/encoder/layer_0/attention/self/mul_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_3/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_3/shape"
      op: "Pack"
      input: "bert/encoder/layer_0/attention/self/mul_2"
      input: "bert/encoder/layer_0/attention/self/Reshape_3/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/self/Reshape_3"
      op: "Reshape"
      input: "bert/encoder/layer_0/attention/self/transpose_3"
      input: "bert/encoder/layer_0/attention/self/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/dense/kernel"
      input: "bert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_0/attention/output/dense/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/dense/bias"
      input: "bert/encoder/layer_0/attention/output/dense/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_0/attention/output/dense/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/MatMul"
      op: "MatMul"
      input: "bert/encoder/layer_0/attention/self/Reshape_3"
      input: "bert/encoder/layer_0/attention/output/dense/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/dense/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_0/attention/output/dense/MatMul"
      input: "bert/encoder/layer_0/attention/output/dense/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/add"
      op: "Add"
      input: "bert/encoder/layer_0/attention/output/dense/BiasAdd"
      input: "bert/encoder/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/beta/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/beta/read"
      op: "Identity"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/gamma/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/gamma/read"
      op: "Identity"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/moments/mean"
      op: "Mean"
      input: "bert/encoder/layer_0/attention/output/add"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/moments/mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/moments/StopGradient"
      op: "StopGradient"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/moments/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "bert/encoder/layer_0/attention/output/add"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/moments/StopGradient"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/moments/variance"
      op: "Mean"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/moments/SquaredDifference"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/moments/variance/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999960041972e-13
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/add"
      op: "Add"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/moments/variance"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/mul"
      op: "Mul"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/Rsqrt"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/gamma/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/mul_1"
      op: "Mul"
      input: "bert/encoder/layer_0/attention/output/add"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/mul_2"
      op: "Mul"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/moments/mean"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/sub"
      op: "Sub"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/beta/read"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/add_1"
      op: "Add"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/mul_1"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\000\002\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/intermediate/dense/kernel"
      input: "bert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_0/intermediate/dense/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 512
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/intermediate/dense/bias"
      input: "bert/encoder/layer_0/intermediate/dense/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_0/intermediate/dense/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/MatMul"
      op: "MatMul"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/add_1"
      input: "bert/encoder/layer_0/intermediate/dense/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_0/intermediate/dense/MatMul"
      input: "bert/encoder/layer_0/intermediate/dense/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/Pow/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 3.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/Pow"
      op: "Pow"
      input: "bert/encoder/layer_0/intermediate/dense/BiasAdd"
      input: "bert/encoder/layer_0/intermediate/dense/Pow/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.044714998453855515
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/mul"
      op: "Mul"
      input: "bert/encoder/layer_0/intermediate/dense/mul/x"
      input: "bert/encoder/layer_0/intermediate/dense/Pow"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/add"
      op: "Add"
      input: "bert/encoder/layer_0/intermediate/dense/BiasAdd"
      input: "bert/encoder/layer_0/intermediate/dense/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.7978845834732056
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/mul_1"
      op: "Mul"
      input: "bert/encoder/layer_0/intermediate/dense/mul_1/x"
      input: "bert/encoder/layer_0/intermediate/dense/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/Tanh"
      op: "Tanh"
      input: "bert/encoder/layer_0/intermediate/dense/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/add_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/add_1"
      op: "Add"
      input: "bert/encoder/layer_0/intermediate/dense/add_1/x"
      input: "bert/encoder/layer_0/intermediate/dense/Tanh"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/mul_2"
      op: "Mul"
      input: "bert/encoder/layer_0/intermediate/dense/mul_2/x"
      input: "bert/encoder/layer_0/intermediate/dense/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/intermediate/dense/mul_3"
      op: "Mul"
      input: "bert/encoder/layer_0/intermediate/dense/BiasAdd"
      input: "bert/encoder/layer_0/intermediate/dense/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/output/dense/kernel"
      input: "bert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_0/output/dense/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/output/dense/bias"
      input: "bert/encoder/layer_0/output/dense/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_0/output/dense/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/MatMul"
      op: "MatMul"
      input: "bert/encoder/layer_0/intermediate/dense/mul_3"
      input: "bert/encoder/layer_0/output/dense/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/dense/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_0/output/dense/MatMul"
      input: "bert/encoder/layer_0/output/dense/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/add"
      op: "Add"
      input: "bert/encoder/layer_0/output/dense/BiasAdd"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/batchnorm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/beta/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/output/LayerNorm/beta"
      input: "bert/encoder/layer_0/output/LayerNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/beta/read"
      op: "Identity"
      input: "bert/encoder/layer_0/output/LayerNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/gamma/Assign"
      op: "Assign"
      input: "bert/encoder/layer_0/output/LayerNorm/gamma"
      input: "bert/encoder/layer_0/output/LayerNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/gamma/read"
      op: "Identity"
      input: "bert/encoder/layer_0/output/LayerNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/moments/mean"
      op: "Mean"
      input: "bert/encoder/layer_0/output/add"
      input: "bert/encoder/layer_0/output/LayerNorm/moments/mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/moments/StopGradient"
      op: "StopGradient"
      input: "bert/encoder/layer_0/output/LayerNorm/moments/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "bert/encoder/layer_0/output/add"
      input: "bert/encoder/layer_0/output/LayerNorm/moments/StopGradient"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/moments/variance"
      op: "Mean"
      input: "bert/encoder/layer_0/output/LayerNorm/moments/SquaredDifference"
      input: "bert/encoder/layer_0/output/LayerNorm/moments/variance/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999960041972e-13
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add"
      op: "Add"
      input: "bert/encoder/layer_0/output/LayerNorm/moments/variance"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/batchnorm/mul"
      op: "Mul"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/Rsqrt"
      input: "bert/encoder/layer_0/output/LayerNorm/gamma/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/batchnorm/mul_1"
      op: "Mul"
      input: "bert/encoder/layer_0/output/add"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/batchnorm/mul_2"
      op: "Mul"
      input: "bert/encoder/layer_0/output/LayerNorm/moments/mean"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/batchnorm/sub"
      op: "Sub"
      input: "bert/encoder/layer_0/output/LayerNorm/beta/read"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add_1"
      op: "Add"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/mul_1"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Shape"
      op: "Shape"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/strided_slice"
      op: "StridedSlice"
      input: "bert/encoder/layer_1/attention/self/Shape"
      input: "bert/encoder/layer_1/attention/self/strided_slice/stack"
      input: "bert/encoder/layer_1/attention/self/strided_slice/stack_1"
      input: "bert/encoder/layer_1/attention/self/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Shape_1"
      op: "Shape"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/strided_slice_1"
      op: "StridedSlice"
      input: "bert/encoder/layer_1/attention/self/Shape_1"
      input: "bert/encoder/layer_1/attention/self/strided_slice_1/stack"
      input: "bert/encoder/layer_1/attention/self/strided_slice_1/stack_1"
      input: "bert/encoder/layer_1/attention/self/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/query/kernel"
      input: "bert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_1/attention/self/query/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/query/bias"
      input: "bert/encoder/layer_1/attention/self/query/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_1/attention/self/query/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/MatMul"
      op: "MatMul"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add_1"
      input: "bert/encoder/layer_1/attention/self/query/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/query/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_1/attention/self/query/MatMul"
      input: "bert/encoder/layer_1/attention/self/query/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/key/kernel"
      input: "bert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_1/attention/self/key/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/key/bias"
      input: "bert/encoder/layer_1/attention/self/key/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_1/attention/self/key/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/MatMul"
      op: "MatMul"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add_1"
      input: "bert/encoder/layer_1/attention/self/key/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/key/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_1/attention/self/key/MatMul"
      input: "bert/encoder/layer_1/attention/self/key/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/value/kernel"
      input: "bert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_1/attention/self/value/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/value/bias"
      input: "bert/encoder/layer_1/attention/self/value/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_1/attention/self/value/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/MatMul"
      op: "MatMul"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add_1"
      input: "bert/encoder/layer_1/attention/self/value/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/value/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_1/attention/self/value/MatMul"
      input: "bert/encoder/layer_1/attention/self/value/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape/shape/3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape/shape"
      op: "Pack"
      input: "bert/encoder/strided_slice_2"
      input: "bert/encoder/layer_1/attention/self/Reshape/shape/1"
      input: "bert/encoder/layer_1/attention/self/Reshape/shape/2"
      input: "bert/encoder/layer_1/attention/self/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape"
      op: "Reshape"
      input: "bert/encoder/layer_1/attention/self/query/BiasAdd"
      input: "bert/encoder/layer_1/attention/self/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 2
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/transpose/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/transpose"
      op: "Transpose"
      input: "bert/encoder/layer_1/attention/self/Reshape"
      input: "bert/encoder/layer_1/attention/self/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_1/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_1/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_1/shape/3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_1/shape"
      op: "Pack"
      input: "bert/encoder/strided_slice_2"
      input: "bert/encoder/layer_1/attention/self/Reshape_1/shape/1"
      input: "bert/encoder/layer_1/attention/self/Reshape_1/shape/2"
      input: "bert/encoder/layer_1/attention/self/Reshape_1/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_1"
      op: "Reshape"
      input: "bert/encoder/layer_1/attention/self/key/BiasAdd"
      input: "bert/encoder/layer_1/attention/self/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 2
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/transpose_1/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/transpose_1"
      op: "Transpose"
      input: "bert/encoder/layer_1/attention/self/Reshape_1"
      input: "bert/encoder/layer_1/attention/self/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/MatMul"
      op: "BatchMatMul"
      input: "bert/encoder/layer_1/attention/self/transpose"
      input: "bert/encoder/layer_1/attention/self/transpose_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "adj_x"
        value {
          b: false
        }
      }
      attr {
        key: "adj_y"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.125
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Mul"
      op: "Mul"
      input: "bert/encoder/layer_1/attention/self/MatMul"
      input: "bert/encoder/layer_1/attention/self/Mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/ExpandDims"
      op: "ExpandDims"
      input: "bert/encoder/mul"
      input: "bert/encoder/layer_1/attention/self/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/sub/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/sub"
      op: "Sub"
      input: "bert/encoder/layer_1/attention/self/sub/x"
      input: "bert/encoder/layer_1/attention/self/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/mul_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -10000.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/mul_1"
      op: "Mul"
      input: "bert/encoder/layer_1/attention/self/sub"
      input: "bert/encoder/layer_1/attention/self/mul_1/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/add"
      op: "Add"
      input: "bert/encoder/layer_1/attention/self/Mul"
      input: "bert/encoder/layer_1/attention/self/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Softmax"
      op: "Softmax"
      input: "bert/encoder/layer_1/attention/self/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_2/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_2/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_2/shape/3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_2/shape"
      op: "Pack"
      input: "bert/encoder/strided_slice_2"
      input: "bert/encoder/layer_1/attention/self/Reshape_2/shape/1"
      input: "bert/encoder/layer_1/attention/self/Reshape_2/shape/2"
      input: "bert/encoder/layer_1/attention/self/Reshape_2/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_2"
      op: "Reshape"
      input: "bert/encoder/layer_1/attention/self/value/BiasAdd"
      input: "bert/encoder/layer_1/attention/self/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 2
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/transpose_2/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/transpose_2"
      op: "Transpose"
      input: "bert/encoder/layer_1/attention/self/Reshape_2"
      input: "bert/encoder/layer_1/attention/self/transpose_2/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/MatMul_1"
      op: "BatchMatMul"
      input: "bert/encoder/layer_1/attention/self/Softmax"
      input: "bert/encoder/layer_1/attention/self/transpose_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "adj_x"
        value {
          b: false
        }
      }
      attr {
        key: "adj_y"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/transpose_3/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/transpose_3"
      op: "Transpose"
      input: "bert/encoder/layer_1/attention/self/MatMul_1"
      input: "bert/encoder/layer_1/attention/self/transpose_3/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 2
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/mul_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/mul_2"
      op: "Mul"
      input: "bert/encoder/strided_slice_2"
      input: "bert/encoder/layer_1/attention/self/mul_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_3/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_3/shape"
      op: "Pack"
      input: "bert/encoder/layer_1/attention/self/mul_2"
      input: "bert/encoder/layer_1/attention/self/Reshape_3/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/self/Reshape_3"
      op: "Reshape"
      input: "bert/encoder/layer_1/attention/self/transpose_3"
      input: "bert/encoder/layer_1/attention/self/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/dense/kernel"
      input: "bert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_1/attention/output/dense/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/dense/bias"
      input: "bert/encoder/layer_1/attention/output/dense/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_1/attention/output/dense/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/MatMul"
      op: "MatMul"
      input: "bert/encoder/layer_1/attention/self/Reshape_3"
      input: "bert/encoder/layer_1/attention/output/dense/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/dense/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_1/attention/output/dense/MatMul"
      input: "bert/encoder/layer_1/attention/output/dense/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/add"
      op: "Add"
      input: "bert/encoder/layer_1/attention/output/dense/BiasAdd"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/beta/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/beta/read"
      op: "Identity"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/gamma/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/gamma/read"
      op: "Identity"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/moments/mean"
      op: "Mean"
      input: "bert/encoder/layer_1/attention/output/add"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/moments/mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/moments/StopGradient"
      op: "StopGradient"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/moments/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "bert/encoder/layer_1/attention/output/add"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/moments/StopGradient"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/moments/variance"
      op: "Mean"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/moments/SquaredDifference"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/moments/variance/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999960041972e-13
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/add"
      op: "Add"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/moments/variance"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/mul"
      op: "Mul"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/Rsqrt"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/gamma/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/mul_1"
      op: "Mul"
      input: "bert/encoder/layer_1/attention/output/add"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/mul_2"
      op: "Mul"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/moments/mean"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/sub"
      op: "Sub"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/beta/read"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/add_1"
      op: "Add"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/mul_1"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\000\002\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/intermediate/dense/kernel"
      input: "bert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_1/intermediate/dense/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 512
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/intermediate/dense/bias"
      input: "bert/encoder/layer_1/intermediate/dense/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_1/intermediate/dense/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/MatMul"
      op: "MatMul"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/add_1"
      input: "bert/encoder/layer_1/intermediate/dense/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_1/intermediate/dense/MatMul"
      input: "bert/encoder/layer_1/intermediate/dense/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/Pow/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 3.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/Pow"
      op: "Pow"
      input: "bert/encoder/layer_1/intermediate/dense/BiasAdd"
      input: "bert/encoder/layer_1/intermediate/dense/Pow/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.044714998453855515
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/mul"
      op: "Mul"
      input: "bert/encoder/layer_1/intermediate/dense/mul/x"
      input: "bert/encoder/layer_1/intermediate/dense/Pow"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/add"
      op: "Add"
      input: "bert/encoder/layer_1/intermediate/dense/BiasAdd"
      input: "bert/encoder/layer_1/intermediate/dense/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.7978845834732056
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/mul_1"
      op: "Mul"
      input: "bert/encoder/layer_1/intermediate/dense/mul_1/x"
      input: "bert/encoder/layer_1/intermediate/dense/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/Tanh"
      op: "Tanh"
      input: "bert/encoder/layer_1/intermediate/dense/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/add_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/add_1"
      op: "Add"
      input: "bert/encoder/layer_1/intermediate/dense/add_1/x"
      input: "bert/encoder/layer_1/intermediate/dense/Tanh"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/mul_2"
      op: "Mul"
      input: "bert/encoder/layer_1/intermediate/dense/mul_2/x"
      input: "bert/encoder/layer_1/intermediate/dense/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/intermediate/dense/mul_3"
      op: "Mul"
      input: "bert/encoder/layer_1/intermediate/dense/BiasAdd"
      input: "bert/encoder/layer_1/intermediate/dense/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal/mul"
      input: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/kernel/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/output/dense/kernel"
      input: "bert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/kernel/read"
      op: "Identity"
      input: "bert/encoder/layer_1/output/dense/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/bias/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/output/dense/bias"
      input: "bert/encoder/layer_1/output/dense/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/bias/read"
      op: "Identity"
      input: "bert/encoder/layer_1/output/dense/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/MatMul"
      op: "MatMul"
      input: "bert/encoder/layer_1/intermediate/dense/mul_3"
      input: "bert/encoder/layer_1/output/dense/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/dense/BiasAdd"
      op: "BiasAdd"
      input: "bert/encoder/layer_1/output/dense/MatMul"
      input: "bert/encoder/layer_1/output/dense/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/add"
      op: "Add"
      input: "bert/encoder/layer_1/output/dense/BiasAdd"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/batchnorm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/beta/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/output/LayerNorm/beta"
      input: "bert/encoder/layer_1/output/LayerNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/beta/read"
      op: "Identity"
      input: "bert/encoder/layer_1/output/LayerNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/gamma/Assign"
      op: "Assign"
      input: "bert/encoder/layer_1/output/LayerNorm/gamma"
      input: "bert/encoder/layer_1/output/LayerNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/gamma/read"
      op: "Identity"
      input: "bert/encoder/layer_1/output/LayerNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/moments/mean"
      op: "Mean"
      input: "bert/encoder/layer_1/output/add"
      input: "bert/encoder/layer_1/output/LayerNorm/moments/mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/moments/StopGradient"
      op: "StopGradient"
      input: "bert/encoder/layer_1/output/LayerNorm/moments/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "bert/encoder/layer_1/output/add"
      input: "bert/encoder/layer_1/output/LayerNorm/moments/StopGradient"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/moments/variance"
      op: "Mean"
      input: "bert/encoder/layer_1/output/LayerNorm/moments/SquaredDifference"
      input: "bert/encoder/layer_1/output/LayerNorm/moments/variance/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/batchnorm/add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999960041972e-13
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/batchnorm/add"
      op: "Add"
      input: "bert/encoder/layer_1/output/LayerNorm/moments/variance"
      input: "bert/encoder/layer_1/output/LayerNorm/batchnorm/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "bert/encoder/layer_1/output/LayerNorm/batchnorm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/batchnorm/mul"
      op: "Mul"
      input: "bert/encoder/layer_1/output/LayerNorm/batchnorm/Rsqrt"
      input: "bert/encoder/layer_1/output/LayerNorm/gamma/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/batchnorm/mul_1"
      op: "Mul"
      input: "bert/encoder/layer_1/output/add"
      input: "bert/encoder/layer_1/output/LayerNorm/batchnorm/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/batchnorm/mul_2"
      op: "Mul"
      input: "bert/encoder/layer_1/output/LayerNorm/moments/mean"
      input: "bert/encoder/layer_1/output/LayerNorm/batchnorm/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/batchnorm/sub"
      op: "Sub"
      input: "bert/encoder/layer_1/output/LayerNorm/beta/read"
      input: "bert/encoder/layer_1/output/LayerNorm/batchnorm/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/layer_1/output/LayerNorm/batchnorm/add_1"
      op: "Add"
      input: "bert/encoder/layer_1/output/LayerNorm/batchnorm/mul_1"
      input: "bert/encoder/layer_1/output/LayerNorm/batchnorm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/Shape_3"
      op: "Shape"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_3"
      op: "StridedSlice"
      input: "bert/encoder/Shape_3"
      input: "bert/encoder/strided_slice_3/stack"
      input: "bert/encoder/strided_slice_3/stack_1"
      input: "bert/encoder/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/encoder/Reshape_2/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/Reshape_2/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/Reshape_2/shape"
      op: "Pack"
      input: "bert/encoder/strided_slice_2"
      input: "bert/encoder/Reshape_2/shape/1"
      input: "bert/encoder/Reshape_2/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/Reshape_2"
      op: "Reshape"
      input: "bert/encoder/layer_0/output/LayerNorm/batchnorm/add_1"
      input: "bert/encoder/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/encoder/Shape_4"
      op: "Shape"
      input: "bert/encoder/layer_1/output/LayerNorm/batchnorm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "bert/encoder/strided_slice_4"
      op: "StridedSlice"
      input: "bert/encoder/Shape_4"
      input: "bert/encoder/strided_slice_4/stack"
      input: "bert/encoder/strided_slice_4/stack_1"
      input: "bert/encoder/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "bert/encoder/Reshape_3/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/Reshape_3/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "bert/encoder/Reshape_3/shape"
      op: "Pack"
      input: "bert/encoder/strided_slice_2"
      input: "bert/encoder/Reshape_3/shape/1"
      input: "bert/encoder/Reshape_3/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/encoder/Reshape_3"
      op: "Reshape"
      input: "bert/encoder/layer_1/output/LayerNorm/batchnorm/add_1"
      input: "bert/encoder/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/pooler/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/pooler/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/pooler/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/pooler/strided_slice"
      op: "StridedSlice"
      input: "bert/encoder/Reshape_3"
      input: "bert/pooler/strided_slice/stack"
      input: "bert/pooler/strided_slice/stack_1"
      input: "bert/pooler/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 5
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 5
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/pooler/Squeeze"
      op: "Squeeze"
      input: "bert/pooler/strided_slice"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 1
          }
        }
      }
    }
    node {
      name: "bert/pooler/dense/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "bert/pooler/dense/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/pooler/dense/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "bert/pooler/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "bert/pooler/dense/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bert/pooler/dense/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "bert/pooler/dense/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "bert/pooler/dense/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/pooler/dense/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "bert/pooler/dense/kernel/Initializer/truncated_normal/mul"
      input: "bert/pooler/dense/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/pooler/dense/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/pooler/dense/kernel/Assign"
      op: "Assign"
      input: "bert/pooler/dense/kernel"
      input: "bert/pooler/dense/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/pooler/dense/kernel/read"
      op: "Identity"
      input: "bert/pooler/dense/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/pooler/dense/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bert/pooler/dense/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bert/pooler/dense/bias/Assign"
      op: "Assign"
      input: "bert/pooler/dense/bias"
      input: "bert/pooler/dense/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bert/pooler/dense/bias/read"
      op: "Identity"
      input: "bert/pooler/dense/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "bert/pooler/dense/MatMul"
      op: "MatMul"
      input: "bert/pooler/Squeeze"
      input: "bert/pooler/dense/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "bert/pooler/dense/BiasAdd"
      op: "BiasAdd"
      input: "bert/pooler/dense/MatMul"
      input: "bert/pooler/dense/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "bert/pooler/dense/Tanh"
      op: "Tanh"
      input: "bert/pooler/dense/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "output_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\003\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "output_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "output_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.019999999552965164
          }
        }
      }
    }
    node {
      name: "output_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "output_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "output_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "output_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "output_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "output_weights/Initializer/truncated_normal"
      op: "Add"
      input: "output_weights/Initializer/truncated_normal/mul"
      input: "output_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "output_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "output_weights/Assign"
      op: "Assign"
      input: "output_weights"
      input: "output_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "output_weights/read"
      op: "Identity"
      input: "output_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "output_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "output_bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "output_bias/Assign"
      op: "Assign"
      input: "output_bias"
      input: "output_bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "output_bias/read"
      op: "Identity"
      input: "output_bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/MatMul"
      op: "MatMul"
      input: "bert/pooler/dense/Tanh"
      input: "output_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/BiasAdd"
      op: "BiasAdd"
      input: "loss/MatMul"
      input: "output_bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "loss/Softmax"
      op: "Softmax"
      input: "loss/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/LogSoftmax"
      op: "LogSoftmax"
      input: "loss/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "ArgMax/dimension"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "ArgMax"
      op: "ArgMax"
      input: "loss/BiasAdd"
      input: "ArgMax/dimension"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "pred_prob"
      op: "Identity"
      input: "loss/Softmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 41
              }
            }
            string_val: "bert/embeddings/LayerNorm/beta"
            string_val: "bert/embeddings/LayerNorm/gamma"
            string_val: "bert/embeddings/position_embeddings"
            string_val: "bert/embeddings/token_type_embeddings"
            string_val: "bert/embeddings/word_embeddings"
            string_val: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_0/attention/output/dense/bias"
            string_val: "bert/encoder/layer_0/attention/output/dense/kernel"
            string_val: "bert/encoder/layer_0/attention/self/key/bias"
            string_val: "bert/encoder/layer_0/attention/self/key/kernel"
            string_val: "bert/encoder/layer_0/attention/self/query/bias"
            string_val: "bert/encoder/layer_0/attention/self/query/kernel"
            string_val: "bert/encoder/layer_0/attention/self/value/bias"
            string_val: "bert/encoder/layer_0/attention/self/value/kernel"
            string_val: "bert/encoder/layer_0/intermediate/dense/bias"
            string_val: "bert/encoder/layer_0/intermediate/dense/kernel"
            string_val: "bert/encoder/layer_0/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_0/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_0/output/dense/bias"
            string_val: "bert/encoder/layer_0/output/dense/kernel"
            string_val: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_1/attention/output/dense/bias"
            string_val: "bert/encoder/layer_1/attention/output/dense/kernel"
            string_val: "bert/encoder/layer_1/attention/self/key/bias"
            string_val: "bert/encoder/layer_1/attention/self/key/kernel"
            string_val: "bert/encoder/layer_1/attention/self/query/bias"
            string_val: "bert/encoder/layer_1/attention/self/query/kernel"
            string_val: "bert/encoder/layer_1/attention/self/value/bias"
            string_val: "bert/encoder/layer_1/attention/self/value/kernel"
            string_val: "bert/encoder/layer_1/intermediate/dense/bias"
            string_val: "bert/encoder/layer_1/intermediate/dense/kernel"
            string_val: "bert/encoder/layer_1/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_1/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_1/output/dense/bias"
            string_val: "bert/encoder/layer_1/output/dense/kernel"
            string_val: "bert/pooler/dense/bias"
            string_val: "bert/pooler/dense/kernel"
            string_val: "output_bias"
            string_val: "output_weights"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 41
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "bert/embeddings/LayerNorm/beta"
      input: "bert/embeddings/LayerNorm/gamma"
      input: "bert/embeddings/position_embeddings"
      input: "bert/embeddings/token_type_embeddings"
      input: "bert/embeddings/word_embeddings"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
      input: "bert/encoder/layer_0/attention/output/dense/bias"
      input: "bert/encoder/layer_0/attention/output/dense/kernel"
      input: "bert/encoder/layer_0/attention/self/key/bias"
      input: "bert/encoder/layer_0/attention/self/key/kernel"
      input: "bert/encoder/layer_0/attention/self/query/bias"
      input: "bert/encoder/layer_0/attention/self/query/kernel"
      input: "bert/encoder/layer_0/attention/self/value/bias"
      input: "bert/encoder/layer_0/attention/self/value/kernel"
      input: "bert/encoder/layer_0/intermediate/dense/bias"
      input: "bert/encoder/layer_0/intermediate/dense/kernel"
      input: "bert/encoder/layer_0/output/LayerNorm/beta"
      input: "bert/encoder/layer_0/output/LayerNorm/gamma"
      input: "bert/encoder/layer_0/output/dense/bias"
      input: "bert/encoder/layer_0/output/dense/kernel"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
      input: "bert/encoder/layer_1/attention/output/dense/bias"
      input: "bert/encoder/layer_1/attention/output/dense/kernel"
      input: "bert/encoder/layer_1/attention/self/key/bias"
      input: "bert/encoder/layer_1/attention/self/key/kernel"
      input: "bert/encoder/layer_1/attention/self/query/bias"
      input: "bert/encoder/layer_1/attention/self/query/kernel"
      input: "bert/encoder/layer_1/attention/self/value/bias"
      input: "bert/encoder/layer_1/attention/self/value/kernel"
      input: "bert/encoder/layer_1/intermediate/dense/bias"
      input: "bert/encoder/layer_1/intermediate/dense/kernel"
      input: "bert/encoder/layer_1/output/LayerNorm/beta"
      input: "bert/encoder/layer_1/output/LayerNorm/gamma"
      input: "bert/encoder/layer_1/output/dense/bias"
      input: "bert/encoder/layer_1/output/dense/kernel"
      input: "bert/pooler/dense/bias"
      input: "bert/pooler/dense/kernel"
      input: "output_bias"
      input: "output_weights"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 41
              }
            }
            string_val: "bert/embeddings/LayerNorm/beta"
            string_val: "bert/embeddings/LayerNorm/gamma"
            string_val: "bert/embeddings/position_embeddings"
            string_val: "bert/embeddings/token_type_embeddings"
            string_val: "bert/embeddings/word_embeddings"
            string_val: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_0/attention/output/dense/bias"
            string_val: "bert/encoder/layer_0/attention/output/dense/kernel"
            string_val: "bert/encoder/layer_0/attention/self/key/bias"
            string_val: "bert/encoder/layer_0/attention/self/key/kernel"
            string_val: "bert/encoder/layer_0/attention/self/query/bias"
            string_val: "bert/encoder/layer_0/attention/self/query/kernel"
            string_val: "bert/encoder/layer_0/attention/self/value/bias"
            string_val: "bert/encoder/layer_0/attention/self/value/kernel"
            string_val: "bert/encoder/layer_0/intermediate/dense/bias"
            string_val: "bert/encoder/layer_0/intermediate/dense/kernel"
            string_val: "bert/encoder/layer_0/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_0/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_0/output/dense/bias"
            string_val: "bert/encoder/layer_0/output/dense/kernel"
            string_val: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_1/attention/output/dense/bias"
            string_val: "bert/encoder/layer_1/attention/output/dense/kernel"
            string_val: "bert/encoder/layer_1/attention/self/key/bias"
            string_val: "bert/encoder/layer_1/attention/self/key/kernel"
            string_val: "bert/encoder/layer_1/attention/self/query/bias"
            string_val: "bert/encoder/layer_1/attention/self/query/kernel"
            string_val: "bert/encoder/layer_1/attention/self/value/bias"
            string_val: "bert/encoder/layer_1/attention/self/value/kernel"
            string_val: "bert/encoder/layer_1/intermediate/dense/bias"
            string_val: "bert/encoder/layer_1/intermediate/dense/kernel"
            string_val: "bert/encoder/layer_1/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_1/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_1/output/dense/bias"
            string_val: "bert/encoder/layer_1/output/dense/kernel"
            string_val: "bert/pooler/dense/bias"
            string_val: "bert/pooler/dense/kernel"
            string_val: "output_bias"
            string_val: "output_weights"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 41
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "bert/embeddings/LayerNorm/beta"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "bert/embeddings/LayerNorm/gamma"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "bert/embeddings/position_embeddings"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "bert/embeddings/token_type_embeddings"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "bert/embeddings/word_embeddings"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30522
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/dense/bias"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/dense/kernel"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/key/bias"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/key/kernel"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/query/bias"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/query/kernel"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/value/bias"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/value/kernel"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "bert/encoder/layer_0/intermediate/dense/bias"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "bert/encoder/layer_0/intermediate/dense/kernel"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "bert/encoder/layer_0/output/LayerNorm/beta"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "bert/encoder/layer_0/output/LayerNorm/gamma"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "bert/encoder/layer_0/output/dense/bias"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "bert/encoder/layer_0/output/dense/kernel"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/dense/bias"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/dense/kernel"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/key/bias"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/key/kernel"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/query/bias"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/query/kernel"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/value/bias"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_30"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/value/kernel"
      input: "save/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_31"
      op: "Assign"
      input: "bert/encoder/layer_1/intermediate/dense/bias"
      input: "save/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_32"
      op: "Assign"
      input: "bert/encoder/layer_1/intermediate/dense/kernel"
      input: "save/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_33"
      op: "Assign"
      input: "bert/encoder/layer_1/output/LayerNorm/beta"
      input: "save/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_34"
      op: "Assign"
      input: "bert/encoder/layer_1/output/LayerNorm/gamma"
      input: "save/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_35"
      op: "Assign"
      input: "bert/encoder/layer_1/output/dense/bias"
      input: "save/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_36"
      op: "Assign"
      input: "bert/encoder/layer_1/output/dense/kernel"
      input: "save/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_37"
      op: "Assign"
      input: "bert/pooler/dense/bias"
      input: "save/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_38"
      op: "Assign"
      input: "bert/pooler/dense/kernel"
      input: "save/RestoreV2:38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_39"
      op: "Assign"
      input: "output_bias"
      input: "save/RestoreV2:39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_40"
      op: "Assign"
      input: "output_weights"
      input: "save/RestoreV2:40"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_2"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
      input: "^save/Assign_26"
      input: "^save/Assign_27"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_3"
      input: "^save/Assign_30"
      input: "^save/Assign_31"
      input: "^save/Assign_32"
      input: "^save/Assign_33"
      input: "^save/Assign_34"
      input: "^save/Assign_35"
      input: "^save/Assign_36"
      input: "^save/Assign_37"
      input: "^save/Assign_38"
      input: "^save/Assign_39"
      input: "^save/Assign_4"
      input: "^save/Assign_40"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^bert/embeddings/LayerNorm/beta/Assign"
      input: "^bert/embeddings/LayerNorm/gamma/Assign"
      input: "^bert/embeddings/position_embeddings/Assign"
      input: "^bert/embeddings/token_type_embeddings/Assign"
      input: "^bert/embeddings/word_embeddings/Assign"
      input: "^bert/encoder/layer_0/attention/output/LayerNorm/beta/Assign"
      input: "^bert/encoder/layer_0/attention/output/LayerNorm/gamma/Assign"
      input: "^bert/encoder/layer_0/attention/output/dense/bias/Assign"
      input: "^bert/encoder/layer_0/attention/output/dense/kernel/Assign"
      input: "^bert/encoder/layer_0/attention/self/key/bias/Assign"
      input: "^bert/encoder/layer_0/attention/self/key/kernel/Assign"
      input: "^bert/encoder/layer_0/attention/self/query/bias/Assign"
      input: "^bert/encoder/layer_0/attention/self/query/kernel/Assign"
      input: "^bert/encoder/layer_0/attention/self/value/bias/Assign"
      input: "^bert/encoder/layer_0/attention/self/value/kernel/Assign"
      input: "^bert/encoder/layer_0/intermediate/dense/bias/Assign"
      input: "^bert/encoder/layer_0/intermediate/dense/kernel/Assign"
      input: "^bert/encoder/layer_0/output/LayerNorm/beta/Assign"
      input: "^bert/encoder/layer_0/output/LayerNorm/gamma/Assign"
      input: "^bert/encoder/layer_0/output/dense/bias/Assign"
      input: "^bert/encoder/layer_0/output/dense/kernel/Assign"
      input: "^bert/encoder/layer_1/attention/output/LayerNorm/beta/Assign"
      input: "^bert/encoder/layer_1/attention/output/LayerNorm/gamma/Assign"
      input: "^bert/encoder/layer_1/attention/output/dense/bias/Assign"
      input: "^bert/encoder/layer_1/attention/output/dense/kernel/Assign"
      input: "^bert/encoder/layer_1/attention/self/key/bias/Assign"
      input: "^bert/encoder/layer_1/attention/self/key/kernel/Assign"
      input: "^bert/encoder/layer_1/attention/self/query/bias/Assign"
      input: "^bert/encoder/layer_1/attention/self/query/kernel/Assign"
      input: "^bert/encoder/layer_1/attention/self/value/bias/Assign"
      input: "^bert/encoder/layer_1/attention/self/value/kernel/Assign"
      input: "^bert/encoder/layer_1/intermediate/dense/bias/Assign"
      input: "^bert/encoder/layer_1/intermediate/dense/kernel/Assign"
      input: "^bert/encoder/layer_1/output/LayerNorm/beta/Assign"
      input: "^bert/encoder/layer_1/output/LayerNorm/gamma/Assign"
      input: "^bert/encoder/layer_1/output/dense/bias/Assign"
      input: "^bert/encoder/layer_1/output/dense/kernel/Assign"
      input: "^bert/pooler/dense/bias/Assign"
      input: "^bert/pooler/dense/kernel/Assign"
      input: "^output_bias/Assign"
      input: "^output_weights/Assign"
    }
    node {
      name: "save_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_0fd5eb5e271249b28172134fcaf520b9/part"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin"
      op: "StringJoin"
      input: "save_1/Const"
      input: "save_1/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_1/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename"
      op: "ShardedFilename"
      input: "save_1/StringJoin"
      input: "save_1/ShardedFilename/shard"
      input: "save_1/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 41
              }
            }
            string_val: "bert/embeddings/LayerNorm/beta"
            string_val: "bert/embeddings/LayerNorm/gamma"
            string_val: "bert/embeddings/position_embeddings"
            string_val: "bert/embeddings/token_type_embeddings"
            string_val: "bert/embeddings/word_embeddings"
            string_val: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_0/attention/output/dense/bias"
            string_val: "bert/encoder/layer_0/attention/output/dense/kernel"
            string_val: "bert/encoder/layer_0/attention/self/key/bias"
            string_val: "bert/encoder/layer_0/attention/self/key/kernel"
            string_val: "bert/encoder/layer_0/attention/self/query/bias"
            string_val: "bert/encoder/layer_0/attention/self/query/kernel"
            string_val: "bert/encoder/layer_0/attention/self/value/bias"
            string_val: "bert/encoder/layer_0/attention/self/value/kernel"
            string_val: "bert/encoder/layer_0/intermediate/dense/bias"
            string_val: "bert/encoder/layer_0/intermediate/dense/kernel"
            string_val: "bert/encoder/layer_0/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_0/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_0/output/dense/bias"
            string_val: "bert/encoder/layer_0/output/dense/kernel"
            string_val: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_1/attention/output/dense/bias"
            string_val: "bert/encoder/layer_1/attention/output/dense/kernel"
            string_val: "bert/encoder/layer_1/attention/self/key/bias"
            string_val: "bert/encoder/layer_1/attention/self/key/kernel"
            string_val: "bert/encoder/layer_1/attention/self/query/bias"
            string_val: "bert/encoder/layer_1/attention/self/query/kernel"
            string_val: "bert/encoder/layer_1/attention/self/value/bias"
            string_val: "bert/encoder/layer_1/attention/self/value/kernel"
            string_val: "bert/encoder/layer_1/intermediate/dense/bias"
            string_val: "bert/encoder/layer_1/intermediate/dense/kernel"
            string_val: "bert/encoder/layer_1/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_1/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_1/output/dense/bias"
            string_val: "bert/encoder/layer_1/output/dense/kernel"
            string_val: "bert/pooler/dense/bias"
            string_val: "bert/pooler/dense/kernel"
            string_val: "output_bias"
            string_val: "output_weights"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 41
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/ShardedFilename"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "bert/embeddings/LayerNorm/beta"
      input: "bert/embeddings/LayerNorm/gamma"
      input: "bert/embeddings/position_embeddings"
      input: "bert/embeddings/token_type_embeddings"
      input: "bert/embeddings/word_embeddings"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
      input: "bert/encoder/layer_0/attention/output/dense/bias"
      input: "bert/encoder/layer_0/attention/output/dense/kernel"
      input: "bert/encoder/layer_0/attention/self/key/bias"
      input: "bert/encoder/layer_0/attention/self/key/kernel"
      input: "bert/encoder/layer_0/attention/self/query/bias"
      input: "bert/encoder/layer_0/attention/self/query/kernel"
      input: "bert/encoder/layer_0/attention/self/value/bias"
      input: "bert/encoder/layer_0/attention/self/value/kernel"
      input: "bert/encoder/layer_0/intermediate/dense/bias"
      input: "bert/encoder/layer_0/intermediate/dense/kernel"
      input: "bert/encoder/layer_0/output/LayerNorm/beta"
      input: "bert/encoder/layer_0/output/LayerNorm/gamma"
      input: "bert/encoder/layer_0/output/dense/bias"
      input: "bert/encoder/layer_0/output/dense/kernel"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
      input: "bert/encoder/layer_1/attention/output/dense/bias"
      input: "bert/encoder/layer_1/attention/output/dense/kernel"
      input: "bert/encoder/layer_1/attention/self/key/bias"
      input: "bert/encoder/layer_1/attention/self/key/kernel"
      input: "bert/encoder/layer_1/attention/self/query/bias"
      input: "bert/encoder/layer_1/attention/self/query/kernel"
      input: "bert/encoder/layer_1/attention/self/value/bias"
      input: "bert/encoder/layer_1/attention/self/value/kernel"
      input: "bert/encoder/layer_1/intermediate/dense/bias"
      input: "bert/encoder/layer_1/intermediate/dense/kernel"
      input: "bert/encoder/layer_1/output/LayerNorm/beta"
      input: "bert/encoder/layer_1/output/LayerNorm/gamma"
      input: "bert/encoder/layer_1/output/dense/bias"
      input: "bert/encoder/layer_1/output/dense/kernel"
      input: "bert/pooler/dense/bias"
      input: "bert/pooler/dense/kernel"
      input: "output_bias"
      input: "output_weights"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/ShardedFilename"
      input: "^save_1/SaveV2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_1/ShardedFilename"
      input: "^save_1/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_1/Const"
      device: "/device:CPU:0"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Identity"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/MergeV2Checkpoints"
      input: "^save_1/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 41
              }
            }
            string_val: "bert/embeddings/LayerNorm/beta"
            string_val: "bert/embeddings/LayerNorm/gamma"
            string_val: "bert/embeddings/position_embeddings"
            string_val: "bert/embeddings/token_type_embeddings"
            string_val: "bert/embeddings/word_embeddings"
            string_val: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_0/attention/output/dense/bias"
            string_val: "bert/encoder/layer_0/attention/output/dense/kernel"
            string_val: "bert/encoder/layer_0/attention/self/key/bias"
            string_val: "bert/encoder/layer_0/attention/self/key/kernel"
            string_val: "bert/encoder/layer_0/attention/self/query/bias"
            string_val: "bert/encoder/layer_0/attention/self/query/kernel"
            string_val: "bert/encoder/layer_0/attention/self/value/bias"
            string_val: "bert/encoder/layer_0/attention/self/value/kernel"
            string_val: "bert/encoder/layer_0/intermediate/dense/bias"
            string_val: "bert/encoder/layer_0/intermediate/dense/kernel"
            string_val: "bert/encoder/layer_0/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_0/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_0/output/dense/bias"
            string_val: "bert/encoder/layer_0/output/dense/kernel"
            string_val: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_1/attention/output/dense/bias"
            string_val: "bert/encoder/layer_1/attention/output/dense/kernel"
            string_val: "bert/encoder/layer_1/attention/self/key/bias"
            string_val: "bert/encoder/layer_1/attention/self/key/kernel"
            string_val: "bert/encoder/layer_1/attention/self/query/bias"
            string_val: "bert/encoder/layer_1/attention/self/query/kernel"
            string_val: "bert/encoder/layer_1/attention/self/value/bias"
            string_val: "bert/encoder/layer_1/attention/self/value/kernel"
            string_val: "bert/encoder/layer_1/intermediate/dense/bias"
            string_val: "bert/encoder/layer_1/intermediate/dense/kernel"
            string_val: "bert/encoder/layer_1/output/LayerNorm/beta"
            string_val: "bert/encoder/layer_1/output/LayerNorm/gamma"
            string_val: "bert/encoder/layer_1/output/dense/bias"
            string_val: "bert/encoder/layer_1/output/dense/kernel"
            string_val: "bert/pooler/dense/bias"
            string_val: "bert/pooler/dense/kernel"
            string_val: "output_bias"
            string_val: "output_weights"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 41
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "bert/embeddings/LayerNorm/beta"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "bert/embeddings/LayerNorm/gamma"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "bert/embeddings/position_embeddings"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/position_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "bert/embeddings/token_type_embeddings"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/token_type_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "bert/embeddings/word_embeddings"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/embeddings/word_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30522
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/beta"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/LayerNorm/gamma"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/dense/bias"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/output/dense/kernel"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/key/bias"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/key/kernel"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/query/bias"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/query/kernel"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/value/bias"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "bert/encoder/layer_0/attention/self/value/kernel"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "bert/encoder/layer_0/intermediate/dense/bias"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "bert/encoder/layer_0/intermediate/dense/kernel"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "bert/encoder/layer_0/output/LayerNorm/beta"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "bert/encoder/layer_0/output/LayerNorm/gamma"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "bert/encoder/layer_0/output/dense/bias"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "bert/encoder/layer_0/output/dense/kernel"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_0/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/beta"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/LayerNorm/gamma"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/dense/bias"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/output/dense/kernel"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/key/bias"
      input: "save_1/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/key/kernel"
      input: "save_1/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/key/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/query/bias"
      input: "save_1/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/query/kernel"
      input: "save_1/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/query/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/value/bias"
      input: "save_1/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_30"
      op: "Assign"
      input: "bert/encoder/layer_1/attention/self/value/kernel"
      input: "save_1/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/attention/self/value/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_31"
      op: "Assign"
      input: "bert/encoder/layer_1/intermediate/dense/bias"
      input: "save_1/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_32"
      op: "Assign"
      input: "bert/encoder/layer_1/intermediate/dense/kernel"
      input: "save_1/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/intermediate/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_33"
      op: "Assign"
      input: "bert/encoder/layer_1/output/LayerNorm/beta"
      input: "save_1/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_34"
      op: "Assign"
      input: "bert/encoder/layer_1/output/LayerNorm/gamma"
      input: "save_1/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/LayerNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_35"
      op: "Assign"
      input: "bert/encoder/layer_1/output/dense/bias"
      input: "save_1/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_36"
      op: "Assign"
      input: "bert/encoder/layer_1/output/dense/kernel"
      input: "save_1/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/encoder/layer_1/output/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_37"
      op: "Assign"
      input: "bert/pooler/dense/bias"
      input: "save_1/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_38"
      op: "Assign"
      input: "bert/pooler/dense/kernel"
      input: "save_1/RestoreV2:38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bert/pooler/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_39"
      op: "Assign"
      input: "output_bias"
      input: "save_1/RestoreV2:39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_40"
      op: "Assign"
      input: "output_weights"
      input: "save_1/RestoreV2:40"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@output_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_shard"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_30"
      input: "^save_1/Assign_31"
      input: "^save_1/Assign_32"
      input: "^save_1/Assign_33"
      input: "^save_1/Assign_34"
      input: "^save_1/Assign_35"
      input: "^save_1/Assign_36"
      input: "^save_1/Assign_37"
      input: "^save_1/Assign_38"
      input: "^save_1/Assign_39"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_40"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/restore_shard"
    }
    versions {
      producer: 27
    }
  }
  saver_def {
    filename_tensor_name: "save_1/Const:0"
    save_tensor_name: "save_1/Identity:0"
    restore_op_name: "save_1/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "model_variables"
    value {
      bytes_list {
        value: "\n bert/embeddings/LayerNorm/beta:0\022%bert/embeddings/LayerNorm/beta/Assign\032%bert/embeddings/LayerNorm/beta/read:022bert/embeddings/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n!bert/embeddings/LayerNorm/gamma:0\022&bert/embeddings/LayerNorm/gamma/Assign\032&bert/embeddings/LayerNorm/gamma/read:022bert/embeddings/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n6bert/encoder/layer_0/attention/output/LayerNorm/beta:0\022;bert/encoder/layer_0/attention/output/LayerNorm/beta/Assign\032;bert/encoder/layer_0/attention/output/LayerNorm/beta/read:02Hbert/encoder/layer_0/attention/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n7bert/encoder/layer_0/attention/output/LayerNorm/gamma:0\022<bert/encoder/layer_0/attention/output/LayerNorm/gamma/Assign\032<bert/encoder/layer_0/attention/output/LayerNorm/gamma/read:02Hbert/encoder/layer_0/attention/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n,bert/encoder/layer_0/output/LayerNorm/beta:0\0221bert/encoder/layer_0/output/LayerNorm/beta/Assign\0321bert/encoder/layer_0/output/LayerNorm/beta/read:02>bert/encoder/layer_0/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n-bert/encoder/layer_0/output/LayerNorm/gamma:0\0222bert/encoder/layer_0/output/LayerNorm/gamma/Assign\0322bert/encoder/layer_0/output/LayerNorm/gamma/read:02>bert/encoder/layer_0/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n6bert/encoder/layer_1/attention/output/LayerNorm/beta:0\022;bert/encoder/layer_1/attention/output/LayerNorm/beta/Assign\032;bert/encoder/layer_1/attention/output/LayerNorm/beta/read:02Hbert/encoder/layer_1/attention/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n7bert/encoder/layer_1/attention/output/LayerNorm/gamma:0\022<bert/encoder/layer_1/attention/output/LayerNorm/gamma/Assign\032<bert/encoder/layer_1/attention/output/LayerNorm/gamma/read:02Hbert/encoder/layer_1/attention/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n,bert/encoder/layer_1/output/LayerNorm/beta:0\0221bert/encoder/layer_1/output/LayerNorm/beta/Assign\0321bert/encoder/layer_1/output/LayerNorm/beta/read:02>bert/encoder/layer_1/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n-bert/encoder/layer_1/output/LayerNorm/gamma:0\0222bert/encoder/layer_1/output/LayerNorm/gamma/Assign\0322bert/encoder/layer_1/output/LayerNorm/gamma/read:02>bert/encoder/layer_1/output/LayerNorm/gamma/Initializer/ones:08\001"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n!bert/embeddings/word_embeddings:0\022&bert/embeddings/word_embeddings/Assign\032&bert/embeddings/word_embeddings/read:02>bert/embeddings/word_embeddings/Initializer/truncated_normal:08\001"
        value: "\n\'bert/embeddings/token_type_embeddings:0\022,bert/embeddings/token_type_embeddings/Assign\032,bert/embeddings/token_type_embeddings/read:02Dbert/embeddings/token_type_embeddings/Initializer/truncated_normal:08\001"
        value: "\n%bert/embeddings/position_embeddings:0\022*bert/embeddings/position_embeddings/Assign\032*bert/embeddings/position_embeddings/read:02Bbert/embeddings/position_embeddings/Initializer/truncated_normal:08\001"
        value: "\n bert/embeddings/LayerNorm/beta:0\022%bert/embeddings/LayerNorm/beta/Assign\032%bert/embeddings/LayerNorm/beta/read:022bert/embeddings/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n!bert/embeddings/LayerNorm/gamma:0\022&bert/embeddings/LayerNorm/gamma/Assign\032&bert/embeddings/LayerNorm/gamma/read:022bert/embeddings/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n2bert/encoder/layer_0/attention/self/query/kernel:0\0227bert/encoder/layer_0/attention/self/query/kernel/Assign\0327bert/encoder/layer_0/attention/self/query/kernel/read:02Obert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal:08\001"
        value: "\n0bert/encoder/layer_0/attention/self/query/bias:0\0225bert/encoder/layer_0/attention/self/query/bias/Assign\0325bert/encoder/layer_0/attention/self/query/bias/read:02Bbert/encoder/layer_0/attention/self/query/bias/Initializer/zeros:08\001"
        value: "\n0bert/encoder/layer_0/attention/self/key/kernel:0\0225bert/encoder/layer_0/attention/self/key/kernel/Assign\0325bert/encoder/layer_0/attention/self/key/kernel/read:02Mbert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal:08\001"
        value: "\n.bert/encoder/layer_0/attention/self/key/bias:0\0223bert/encoder/layer_0/attention/self/key/bias/Assign\0323bert/encoder/layer_0/attention/self/key/bias/read:02@bert/encoder/layer_0/attention/self/key/bias/Initializer/zeros:08\001"
        value: "\n2bert/encoder/layer_0/attention/self/value/kernel:0\0227bert/encoder/layer_0/attention/self/value/kernel/Assign\0327bert/encoder/layer_0/attention/self/value/kernel/read:02Obert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal:08\001"
        value: "\n0bert/encoder/layer_0/attention/self/value/bias:0\0225bert/encoder/layer_0/attention/self/value/bias/Assign\0325bert/encoder/layer_0/attention/self/value/bias/read:02Bbert/encoder/layer_0/attention/self/value/bias/Initializer/zeros:08\001"
        value: "\n4bert/encoder/layer_0/attention/output/dense/kernel:0\0229bert/encoder/layer_0/attention/output/dense/kernel/Assign\0329bert/encoder/layer_0/attention/output/dense/kernel/read:02Qbert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n2bert/encoder/layer_0/attention/output/dense/bias:0\0227bert/encoder/layer_0/attention/output/dense/bias/Assign\0327bert/encoder/layer_0/attention/output/dense/bias/read:02Dbert/encoder/layer_0/attention/output/dense/bias/Initializer/zeros:08\001"
        value: "\n6bert/encoder/layer_0/attention/output/LayerNorm/beta:0\022;bert/encoder/layer_0/attention/output/LayerNorm/beta/Assign\032;bert/encoder/layer_0/attention/output/LayerNorm/beta/read:02Hbert/encoder/layer_0/attention/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n7bert/encoder/layer_0/attention/output/LayerNorm/gamma:0\022<bert/encoder/layer_0/attention/output/LayerNorm/gamma/Assign\032<bert/encoder/layer_0/attention/output/LayerNorm/gamma/read:02Hbert/encoder/layer_0/attention/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n0bert/encoder/layer_0/intermediate/dense/kernel:0\0225bert/encoder/layer_0/intermediate/dense/kernel/Assign\0325bert/encoder/layer_0/intermediate/dense/kernel/read:02Mbert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n.bert/encoder/layer_0/intermediate/dense/bias:0\0223bert/encoder/layer_0/intermediate/dense/bias/Assign\0323bert/encoder/layer_0/intermediate/dense/bias/read:02@bert/encoder/layer_0/intermediate/dense/bias/Initializer/zeros:08\001"
        value: "\n*bert/encoder/layer_0/output/dense/kernel:0\022/bert/encoder/layer_0/output/dense/kernel/Assign\032/bert/encoder/layer_0/output/dense/kernel/read:02Gbert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n(bert/encoder/layer_0/output/dense/bias:0\022-bert/encoder/layer_0/output/dense/bias/Assign\032-bert/encoder/layer_0/output/dense/bias/read:02:bert/encoder/layer_0/output/dense/bias/Initializer/zeros:08\001"
        value: "\n,bert/encoder/layer_0/output/LayerNorm/beta:0\0221bert/encoder/layer_0/output/LayerNorm/beta/Assign\0321bert/encoder/layer_0/output/LayerNorm/beta/read:02>bert/encoder/layer_0/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n-bert/encoder/layer_0/output/LayerNorm/gamma:0\0222bert/encoder/layer_0/output/LayerNorm/gamma/Assign\0322bert/encoder/layer_0/output/LayerNorm/gamma/read:02>bert/encoder/layer_0/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n2bert/encoder/layer_1/attention/self/query/kernel:0\0227bert/encoder/layer_1/attention/self/query/kernel/Assign\0327bert/encoder/layer_1/attention/self/query/kernel/read:02Obert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal:08\001"
        value: "\n0bert/encoder/layer_1/attention/self/query/bias:0\0225bert/encoder/layer_1/attention/self/query/bias/Assign\0325bert/encoder/layer_1/attention/self/query/bias/read:02Bbert/encoder/layer_1/attention/self/query/bias/Initializer/zeros:08\001"
        value: "\n0bert/encoder/layer_1/attention/self/key/kernel:0\0225bert/encoder/layer_1/attention/self/key/kernel/Assign\0325bert/encoder/layer_1/attention/self/key/kernel/read:02Mbert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal:08\001"
        value: "\n.bert/encoder/layer_1/attention/self/key/bias:0\0223bert/encoder/layer_1/attention/self/key/bias/Assign\0323bert/encoder/layer_1/attention/self/key/bias/read:02@bert/encoder/layer_1/attention/self/key/bias/Initializer/zeros:08\001"
        value: "\n2bert/encoder/layer_1/attention/self/value/kernel:0\0227bert/encoder/layer_1/attention/self/value/kernel/Assign\0327bert/encoder/layer_1/attention/self/value/kernel/read:02Obert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal:08\001"
        value: "\n0bert/encoder/layer_1/attention/self/value/bias:0\0225bert/encoder/layer_1/attention/self/value/bias/Assign\0325bert/encoder/layer_1/attention/self/value/bias/read:02Bbert/encoder/layer_1/attention/self/value/bias/Initializer/zeros:08\001"
        value: "\n4bert/encoder/layer_1/attention/output/dense/kernel:0\0229bert/encoder/layer_1/attention/output/dense/kernel/Assign\0329bert/encoder/layer_1/attention/output/dense/kernel/read:02Qbert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n2bert/encoder/layer_1/attention/output/dense/bias:0\0227bert/encoder/layer_1/attention/output/dense/bias/Assign\0327bert/encoder/layer_1/attention/output/dense/bias/read:02Dbert/encoder/layer_1/attention/output/dense/bias/Initializer/zeros:08\001"
        value: "\n6bert/encoder/layer_1/attention/output/LayerNorm/beta:0\022;bert/encoder/layer_1/attention/output/LayerNorm/beta/Assign\032;bert/encoder/layer_1/attention/output/LayerNorm/beta/read:02Hbert/encoder/layer_1/attention/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n7bert/encoder/layer_1/attention/output/LayerNorm/gamma:0\022<bert/encoder/layer_1/attention/output/LayerNorm/gamma/Assign\032<bert/encoder/layer_1/attention/output/LayerNorm/gamma/read:02Hbert/encoder/layer_1/attention/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n0bert/encoder/layer_1/intermediate/dense/kernel:0\0225bert/encoder/layer_1/intermediate/dense/kernel/Assign\0325bert/encoder/layer_1/intermediate/dense/kernel/read:02Mbert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n.bert/encoder/layer_1/intermediate/dense/bias:0\0223bert/encoder/layer_1/intermediate/dense/bias/Assign\0323bert/encoder/layer_1/intermediate/dense/bias/read:02@bert/encoder/layer_1/intermediate/dense/bias/Initializer/zeros:08\001"
        value: "\n*bert/encoder/layer_1/output/dense/kernel:0\022/bert/encoder/layer_1/output/dense/kernel/Assign\032/bert/encoder/layer_1/output/dense/kernel/read:02Gbert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n(bert/encoder/layer_1/output/dense/bias:0\022-bert/encoder/layer_1/output/dense/bias/Assign\032-bert/encoder/layer_1/output/dense/bias/read:02:bert/encoder/layer_1/output/dense/bias/Initializer/zeros:08\001"
        value: "\n,bert/encoder/layer_1/output/LayerNorm/beta:0\0221bert/encoder/layer_1/output/LayerNorm/beta/Assign\0321bert/encoder/layer_1/output/LayerNorm/beta/read:02>bert/encoder/layer_1/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n-bert/encoder/layer_1/output/LayerNorm/gamma:0\0222bert/encoder/layer_1/output/LayerNorm/gamma/Assign\0322bert/encoder/layer_1/output/LayerNorm/gamma/read:02>bert/encoder/layer_1/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n\032bert/pooler/dense/kernel:0\022\037bert/pooler/dense/kernel/Assign\032\037bert/pooler/dense/kernel/read:027bert/pooler/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n\030bert/pooler/dense/bias:0\022\035bert/pooler/dense/bias/Assign\032\035bert/pooler/dense/bias/read:02*bert/pooler/dense/bias/Initializer/zeros:08\001"
        value: "\n\020output_weights:0\022\025output_weights/Assign\032\025output_weights/read:02-output_weights/Initializer/truncated_normal:08\001"
        value: "\n\routput_bias:0\022\022output_bias/Assign\032\022output_bias/read:02\037output_bias/Initializer/zeros:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n!bert/embeddings/word_embeddings:0\022&bert/embeddings/word_embeddings/Assign\032&bert/embeddings/word_embeddings/read:02>bert/embeddings/word_embeddings/Initializer/truncated_normal:08\001"
        value: "\n\'bert/embeddings/token_type_embeddings:0\022,bert/embeddings/token_type_embeddings/Assign\032,bert/embeddings/token_type_embeddings/read:02Dbert/embeddings/token_type_embeddings/Initializer/truncated_normal:08\001"
        value: "\n%bert/embeddings/position_embeddings:0\022*bert/embeddings/position_embeddings/Assign\032*bert/embeddings/position_embeddings/read:02Bbert/embeddings/position_embeddings/Initializer/truncated_normal:08\001"
        value: "\n bert/embeddings/LayerNorm/beta:0\022%bert/embeddings/LayerNorm/beta/Assign\032%bert/embeddings/LayerNorm/beta/read:022bert/embeddings/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n!bert/embeddings/LayerNorm/gamma:0\022&bert/embeddings/LayerNorm/gamma/Assign\032&bert/embeddings/LayerNorm/gamma/read:022bert/embeddings/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n2bert/encoder/layer_0/attention/self/query/kernel:0\0227bert/encoder/layer_0/attention/self/query/kernel/Assign\0327bert/encoder/layer_0/attention/self/query/kernel/read:02Obert/encoder/layer_0/attention/self/query/kernel/Initializer/truncated_normal:08\001"
        value: "\n0bert/encoder/layer_0/attention/self/query/bias:0\0225bert/encoder/layer_0/attention/self/query/bias/Assign\0325bert/encoder/layer_0/attention/self/query/bias/read:02Bbert/encoder/layer_0/attention/self/query/bias/Initializer/zeros:08\001"
        value: "\n0bert/encoder/layer_0/attention/self/key/kernel:0\0225bert/encoder/layer_0/attention/self/key/kernel/Assign\0325bert/encoder/layer_0/attention/self/key/kernel/read:02Mbert/encoder/layer_0/attention/self/key/kernel/Initializer/truncated_normal:08\001"
        value: "\n.bert/encoder/layer_0/attention/self/key/bias:0\0223bert/encoder/layer_0/attention/self/key/bias/Assign\0323bert/encoder/layer_0/attention/self/key/bias/read:02@bert/encoder/layer_0/attention/self/key/bias/Initializer/zeros:08\001"
        value: "\n2bert/encoder/layer_0/attention/self/value/kernel:0\0227bert/encoder/layer_0/attention/self/value/kernel/Assign\0327bert/encoder/layer_0/attention/self/value/kernel/read:02Obert/encoder/layer_0/attention/self/value/kernel/Initializer/truncated_normal:08\001"
        value: "\n0bert/encoder/layer_0/attention/self/value/bias:0\0225bert/encoder/layer_0/attention/self/value/bias/Assign\0325bert/encoder/layer_0/attention/self/value/bias/read:02Bbert/encoder/layer_0/attention/self/value/bias/Initializer/zeros:08\001"
        value: "\n4bert/encoder/layer_0/attention/output/dense/kernel:0\0229bert/encoder/layer_0/attention/output/dense/kernel/Assign\0329bert/encoder/layer_0/attention/output/dense/kernel/read:02Qbert/encoder/layer_0/attention/output/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n2bert/encoder/layer_0/attention/output/dense/bias:0\0227bert/encoder/layer_0/attention/output/dense/bias/Assign\0327bert/encoder/layer_0/attention/output/dense/bias/read:02Dbert/encoder/layer_0/attention/output/dense/bias/Initializer/zeros:08\001"
        value: "\n6bert/encoder/layer_0/attention/output/LayerNorm/beta:0\022;bert/encoder/layer_0/attention/output/LayerNorm/beta/Assign\032;bert/encoder/layer_0/attention/output/LayerNorm/beta/read:02Hbert/encoder/layer_0/attention/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n7bert/encoder/layer_0/attention/output/LayerNorm/gamma:0\022<bert/encoder/layer_0/attention/output/LayerNorm/gamma/Assign\032<bert/encoder/layer_0/attention/output/LayerNorm/gamma/read:02Hbert/encoder/layer_0/attention/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n0bert/encoder/layer_0/intermediate/dense/kernel:0\0225bert/encoder/layer_0/intermediate/dense/kernel/Assign\0325bert/encoder/layer_0/intermediate/dense/kernel/read:02Mbert/encoder/layer_0/intermediate/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n.bert/encoder/layer_0/intermediate/dense/bias:0\0223bert/encoder/layer_0/intermediate/dense/bias/Assign\0323bert/encoder/layer_0/intermediate/dense/bias/read:02@bert/encoder/layer_0/intermediate/dense/bias/Initializer/zeros:08\001"
        value: "\n*bert/encoder/layer_0/output/dense/kernel:0\022/bert/encoder/layer_0/output/dense/kernel/Assign\032/bert/encoder/layer_0/output/dense/kernel/read:02Gbert/encoder/layer_0/output/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n(bert/encoder/layer_0/output/dense/bias:0\022-bert/encoder/layer_0/output/dense/bias/Assign\032-bert/encoder/layer_0/output/dense/bias/read:02:bert/encoder/layer_0/output/dense/bias/Initializer/zeros:08\001"
        value: "\n,bert/encoder/layer_0/output/LayerNorm/beta:0\0221bert/encoder/layer_0/output/LayerNorm/beta/Assign\0321bert/encoder/layer_0/output/LayerNorm/beta/read:02>bert/encoder/layer_0/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n-bert/encoder/layer_0/output/LayerNorm/gamma:0\0222bert/encoder/layer_0/output/LayerNorm/gamma/Assign\0322bert/encoder/layer_0/output/LayerNorm/gamma/read:02>bert/encoder/layer_0/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n2bert/encoder/layer_1/attention/self/query/kernel:0\0227bert/encoder/layer_1/attention/self/query/kernel/Assign\0327bert/encoder/layer_1/attention/self/query/kernel/read:02Obert/encoder/layer_1/attention/self/query/kernel/Initializer/truncated_normal:08\001"
        value: "\n0bert/encoder/layer_1/attention/self/query/bias:0\0225bert/encoder/layer_1/attention/self/query/bias/Assign\0325bert/encoder/layer_1/attention/self/query/bias/read:02Bbert/encoder/layer_1/attention/self/query/bias/Initializer/zeros:08\001"
        value: "\n0bert/encoder/layer_1/attention/self/key/kernel:0\0225bert/encoder/layer_1/attention/self/key/kernel/Assign\0325bert/encoder/layer_1/attention/self/key/kernel/read:02Mbert/encoder/layer_1/attention/self/key/kernel/Initializer/truncated_normal:08\001"
        value: "\n.bert/encoder/layer_1/attention/self/key/bias:0\0223bert/encoder/layer_1/attention/self/key/bias/Assign\0323bert/encoder/layer_1/attention/self/key/bias/read:02@bert/encoder/layer_1/attention/self/key/bias/Initializer/zeros:08\001"
        value: "\n2bert/encoder/layer_1/attention/self/value/kernel:0\0227bert/encoder/layer_1/attention/self/value/kernel/Assign\0327bert/encoder/layer_1/attention/self/value/kernel/read:02Obert/encoder/layer_1/attention/self/value/kernel/Initializer/truncated_normal:08\001"
        value: "\n0bert/encoder/layer_1/attention/self/value/bias:0\0225bert/encoder/layer_1/attention/self/value/bias/Assign\0325bert/encoder/layer_1/attention/self/value/bias/read:02Bbert/encoder/layer_1/attention/self/value/bias/Initializer/zeros:08\001"
        value: "\n4bert/encoder/layer_1/attention/output/dense/kernel:0\0229bert/encoder/layer_1/attention/output/dense/kernel/Assign\0329bert/encoder/layer_1/attention/output/dense/kernel/read:02Qbert/encoder/layer_1/attention/output/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n2bert/encoder/layer_1/attention/output/dense/bias:0\0227bert/encoder/layer_1/attention/output/dense/bias/Assign\0327bert/encoder/layer_1/attention/output/dense/bias/read:02Dbert/encoder/layer_1/attention/output/dense/bias/Initializer/zeros:08\001"
        value: "\n6bert/encoder/layer_1/attention/output/LayerNorm/beta:0\022;bert/encoder/layer_1/attention/output/LayerNorm/beta/Assign\032;bert/encoder/layer_1/attention/output/LayerNorm/beta/read:02Hbert/encoder/layer_1/attention/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n7bert/encoder/layer_1/attention/output/LayerNorm/gamma:0\022<bert/encoder/layer_1/attention/output/LayerNorm/gamma/Assign\032<bert/encoder/layer_1/attention/output/LayerNorm/gamma/read:02Hbert/encoder/layer_1/attention/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n0bert/encoder/layer_1/intermediate/dense/kernel:0\0225bert/encoder/layer_1/intermediate/dense/kernel/Assign\0325bert/encoder/layer_1/intermediate/dense/kernel/read:02Mbert/encoder/layer_1/intermediate/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n.bert/encoder/layer_1/intermediate/dense/bias:0\0223bert/encoder/layer_1/intermediate/dense/bias/Assign\0323bert/encoder/layer_1/intermediate/dense/bias/read:02@bert/encoder/layer_1/intermediate/dense/bias/Initializer/zeros:08\001"
        value: "\n*bert/encoder/layer_1/output/dense/kernel:0\022/bert/encoder/layer_1/output/dense/kernel/Assign\032/bert/encoder/layer_1/output/dense/kernel/read:02Gbert/encoder/layer_1/output/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n(bert/encoder/layer_1/output/dense/bias:0\022-bert/encoder/layer_1/output/dense/bias/Assign\032-bert/encoder/layer_1/output/dense/bias/read:02:bert/encoder/layer_1/output/dense/bias/Initializer/zeros:08\001"
        value: "\n,bert/encoder/layer_1/output/LayerNorm/beta:0\0221bert/encoder/layer_1/output/LayerNorm/beta/Assign\0321bert/encoder/layer_1/output/LayerNorm/beta/read:02>bert/encoder/layer_1/output/LayerNorm/beta/Initializer/zeros:08\001"
        value: "\n-bert/encoder/layer_1/output/LayerNorm/gamma:0\0222bert/encoder/layer_1/output/LayerNorm/gamma/Assign\0322bert/encoder/layer_1/output/LayerNorm/gamma/read:02>bert/encoder/layer_1/output/LayerNorm/gamma/Initializer/ones:08\001"
        value: "\n\032bert/pooler/dense/kernel:0\022\037bert/pooler/dense/kernel/Assign\032\037bert/pooler/dense/kernel/read:027bert/pooler/dense/kernel/Initializer/truncated_normal:08\001"
        value: "\n\030bert/pooler/dense/bias:0\022\035bert/pooler/dense/bias/Assign\032\035bert/pooler/dense/bias/read:02*bert/pooler/dense/bias/Initializer/zeros:08\001"
        value: "\n\020output_weights:0\022\025output_weights/Assign\032\025output_weights/read:02-output_weights/Initializer/truncated_normal:08\001"
        value: "\n\routput_bias:0\022\022output_bias/Assign\032\022output_bias/read:02\037output_bias/Initializer/zeros:08\001"
      }
    }
  }
  signature_def {
    key: "result"
    value {
      inputs {
        key: "input_ids"
        value {
          name: "input_ids:0"
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 128
            }
          }
        }
      }
      inputs {
        key: "input_mask"
        value {
          name: "input_mask:0"
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 128
            }
          }
        }
      }
      outputs {
        key: "pred_label"
        value {
          name: "ArgMax:0"
          dtype: DT_INT64
          tensor_shape {
            dim {
              size: -1
            }
          }
        }
      }
      outputs {
        key: "score"
        value {
          name: "pred_prob:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 3
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
